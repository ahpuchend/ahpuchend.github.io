<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AIdreamer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ahpuchend.github.io/"/>
  <updated>2019-09-24T00:43:22.184Z</updated>
  <id>https://ahpuchend.github.io/</id>
  
  <author>
    <name>ahpudong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>豆瓣小王子书评词云制作</title>
    <link href="https://ahpuchend.github.io/2019/09/23/%E8%B1%86%E7%93%A3%E5%B0%8F%E7%8E%8B%E5%AD%90%E4%B9%A6%E8%AF%84%E8%AF%8D%E4%BA%91%E5%88%B6%E4%BD%9C/"/>
    <id>https://ahpuchend.github.io/2019/09/23/豆瓣小王子书评词云制作/</id>
    <published>2019-09-23T13:03:46.000Z</published>
    <updated>2019-09-24T00:43:22.184Z</updated>
    
    <content type="html"><![CDATA[<p>主要的想法就是先用request.get()方法获取一些url，得到url的html后再用beautifulsoup解析这些网页，获取用户的id,name,href,commnet这四个属性,然后在用户的这些属性存入数据库，又添加了一些无聊的数据库的增删改查功能,接着从数据库取出所有的评论，一边取一边用正则清洗一些无用的评论，然后直接用列表存一下清洗后的评论（反正数据比较少），然后用jieba库来中文分词，最后用wordcloude库生成词云。ui可以自定义，我做得超丑（主要觉得没意思[摊手]）</p><a id="more"></a><p>重要的是：python刚学，代码写得特别垃圾，代码写得特别垃圾，代码写得特别垃圾，内存列表都是随便开的。逃~。以后会重构的。</p><p><img src="/2019/09/23/豆瓣小王子书评词云制作/littleprincewordcloud.png" alt="图片词云"></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import os</span><br><span class="line">import pymysql as Db</span><br><span class="line">import jieba</span><br><span class="line">import re</span><br><span class="line">from wordcloud import WordCloud</span><br><span class="line">import matplotlib.pyplot as plt</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#全局变量，存放所有用户信息</span><br><span class="line">UsersPages=[]</span><br><span class="line">class User:</span><br><span class="line">    def __init__(self, id, name=&apos;&apos;, href=&apos;&apos;, comment=&apos;&apos;):</span><br><span class="line">        self.userid=id</span><br><span class="line">        self.username=name</span><br><span class="line">        self.userhref=href</span><br><span class="line">        self.usercomment=comment</span><br><span class="line">    def getusername(self):</span><br><span class="line">        return self.username</span><br><span class="line">    def getusercomment(self):</span><br><span class="line">            return self.usercomment</span><br><span class="line">    def getuserid(self):</span><br><span class="line">        return self.userid</span><br><span class="line">    def getuserhref(self):</span><br><span class="line">        return self.userhref</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">def parse(htmluser):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    解析器</span><br><span class="line">    解析每一个用户的信息</span><br><span class="line">    :param htmluser:</span><br><span class="line">    :return:</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    usersoup = BeautifulSoup(htmluser, &apos;lxml&apos;)</span><br><span class="line">    userid = usersoup.find(&apos;li&apos;, class_=&apos;comment-item&apos;)[&apos;data-cid&apos;]</span><br><span class="line">    userinfo = usersoup.find(&apos;div&apos;, class_=&apos;avatar&apos;).a</span><br><span class="line">    username = userinfo[&apos;title&apos;]</span><br><span class="line">    userhref = userinfo[&apos;href&apos;]</span><br><span class="line">    usercommet = usersoup.select(&apos;.short&apos;)[0].string</span><br><span class="line">    # print(userid, username, userhref, usercommet)</span><br><span class="line">    return User(userid, username, userhref, usercommet)</span><br><span class="line"> ``` </span><br><span class="line">```   </span><br><span class="line">def webCrawler():</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    #爬取小王子所有的评论网页信息,先存入本地.txt文件,在对文件做处理</span><br><span class="line">    :return:</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    #这里range的范围可以根据网页设置</span><br><span class="line">    for i in range(608,620):</span><br><span class="line">        url=&apos;https://book.douban.com/subject/1084336/comments/hot?p=&apos;+str(i)</span><br><span class="line">        re=requests.get(url)</span><br><span class="line">        #re=requests.get(url,headers=random.choice(headers),proxies=random.choice(proxies)) # p4643</span><br><span class="line">        # print(headers)</span><br><span class="line">        # print(proxies)</span><br><span class="line">        print(re.status_code)</span><br><span class="line">        try:</span><br><span class="line">            nedpath = &apos;C:\\Users\\chend\\PycharmProjects\\nju\\collection\\&apos;</span><br><span class="line">            os.chdir(nedpath)</span><br><span class="line">            # print(nedpath)</span><br><span class="line">        except Exception as err:</span><br><span class="line">            print(err)</span><br><span class="line">        with open(&apos;littlePrince&apos;+str(i)+&apos;.txt&apos;, &apos;w&apos;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">            text=re.text</span><br><span class="line">            f.writelines(text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def localAnalysis():</span><br><span class="line">    #对webCrawler模块爬到的数据做本地分析</span><br><span class="line">    for i in range(608,620):</span><br><span class="line">        Users = []</span><br><span class="line">        try:</span><br><span class="line">            nedpath = &apos;C:\\Users\\chend\\PycharmProjects\\nju\\collection\\&apos;</span><br><span class="line">            os.chdir(nedpath)</span><br><span class="line">        except Exception as err:</span><br><span class="line">            print(err)</span><br><span class="line">        with open(&apos;littlePrince&apos;+str(i)+&apos;.txt&apos;, &apos;r+&apos;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">            content=f.read()</span><br><span class="line">            soup=BeautifulSoup(content,&apos;lxml&apos;)</span><br><span class="line">            userinfo=soup.find_all(&apos;li&apos;, class_=&apos;comment-item&apos;)</span><br><span class="line">            for htmluser in userinfo:</span><br><span class="line">                htmluser=str(htmluser)</span><br><span class="line">                user=parse(htmluser)</span><br><span class="line">                Users.append(user)</span><br><span class="line">            UsersPages.append(Users)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def storeDB(UsersPages):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    存入mysql数据库</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    connection = Db.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;cd7089028&apos;, db=&apos;littleprince&apos;)</span><br><span class="line">    for userpage in UsersPages:</span><br><span class="line">        for user in userpage:</span><br><span class="line">            userid=str(user.userid).strip()</span><br><span class="line">            username=str(user.getusername()).strip()</span><br><span class="line">            userhref=str(user.getuserhref()).strip()</span><br><span class="line">            usercomment=str(user.getusercomment()).strip()</span><br><span class="line">            print(userid, username, userhref, usercomment)</span><br><span class="line">            try:</span><br><span class="line">                with connection.cursor() as cursor:</span><br><span class="line">                    sql = &quot;insert into user values (%s,%s,%s,%s) &quot;</span><br><span class="line">                    cursor.execute(sql, (userid, username, userhref, usercomment,))</span><br><span class="line">                connection.commit()</span><br><span class="line">            except Exception as err:</span><br><span class="line">                print(err)</span><br><span class="line">    connection.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">def Opdatabase(mode,user):</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    数据库的增删改查</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    connection = Db.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;********&apos;, db=&apos;littleprince&apos;)</span><br><span class="line"></span><br><span class="line">    #特定用户信息查找模式</span><br><span class="line">    if mode == &apos;select&apos;:</span><br><span class="line">            # Read a single record</span><br><span class="line">        with connection.cursor() as cursor:</span><br><span class="line">            sql = &quot;select * from user where userid=%s&quot;</span><br><span class="line">            cursor.execute(sql, (user.getuserid(),))</span><br><span class="line">            result = cursor.fetchall()</span><br><span class="line">            for row in result:</span><br><span class="line">                userid=str(row[0])</span><br><span class="line">                username=str(row[1])</span><br><span class="line">                userhref=str(row[2])</span><br><span class="line">                usercomment=str(row[3])</span><br><span class="line">                #print(userid, username, userhref,usercomment)</span><br><span class="line">            connection.close()</span><br><span class="line">            return  User(userid, username, userhref, usercomment)</span><br><span class="line">    #增加模式</span><br><span class="line">    if mode == &apos;insert&apos;:</span><br><span class="line">        with connection.cursor() as cursor:</span><br><span class="line">            sql = &quot;insert into user values(%s,%s,%s,%s)&quot;</span><br><span class="line">            userid = str(user.userid).strip()</span><br><span class="line">            username = str(user.getusername()).strip()</span><br><span class="line">            userhref = str(user.getuserhref()).strip()</span><br><span class="line">            usercomment = str(user.getusercomment()).strip()</span><br><span class="line">            print(userid, username, userhref,usercomment)</span><br><span class="line">            cursor.execute(sql,(userid, username, userhref, usercomment))</span><br><span class="line">            connection.commit()</span><br><span class="line">        connection.close()</span><br><span class="line">    #删除模式</span><br><span class="line">    if mode == &apos;delete&apos;:</span><br><span class="line">        with connection.cursor() as cursor:</span><br><span class="line">            sql = &quot;delete from user where userid=%s&quot;</span><br><span class="line">            userid=str(user.getuserid()).strip()</span><br><span class="line">            print(userid)</span><br><span class="line">            op=cursor.execute(sql, (userid))</span><br><span class="line">            connection.commit()</span><br><span class="line">            connection.close()</span><br><span class="line">            return op</span><br><span class="line">    #更新模式</span><br><span class="line">    if mode == &apos;update&apos;:</span><br><span class="line">        with connection.cursor() as cursor:</span><br><span class="line">            sql = &quot;update user set usercomment=%s where userid=%s&quot;</span><br><span class="line">            usercomment = str(input(&apos;update comment is:&apos;))</span><br><span class="line">            userid=str(user.getuserid()).strip()</span><br><span class="line">            op=cursor.execute(sql, (usercomment, userid))</span><br><span class="line">            connection.commit()</span><br><span class="line">            connection.close()</span><br><span class="line">            return op</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">def getAllComments():</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    提取所有的评论存入文件comments.txt</span><br><span class="line">    :return:</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    #连接数据库</span><br><span class="line">    conn=Db.connect(host=&apos;localhost&apos;, user=&apos;root&apos;, password=&apos;cd7089028&apos;, db=&apos;littleprince&apos;)</span><br><span class="line">    #取所有用户评论</span><br><span class="line">    with conn.cursor() as cursor:</span><br><span class="line">        comments=[]</span><br><span class="line">        sql=&quot;select usercomment from user&quot;</span><br><span class="line">        try:</span><br><span class="line">            cursor.execute(sql)</span><br><span class="line">            results=cursor.fetchall()</span><br><span class="line">            for row in results:</span><br><span class="line">                #在这里需要用正则表达式对评论做一次清洗：</span><br><span class="line">                #只保留中英文评论和超过四个汉字的评论</span><br><span class="line">                pattern=re.compile(&apos;[\u4e00-\u9fa5_a-zA-Z0-9_\\s_,&apos;&apos;&quot;~:\-\._，：。‘’“”？！]&#123;4,150&#125;&apos;)</span><br><span class="line">                match=pattern.match(row[0])</span><br><span class="line">                if match:</span><br><span class="line">                    comments.append(row[0])</span><br><span class="line">                    # comments.append(&apos;\n&apos;)</span><br><span class="line">            path = &apos;C:\\Users\\chend\\PycharmProjects\\nju\\&apos;</span><br><span class="line">            os.chdir(path)</span><br><span class="line">            with open(&apos;comments.txt&apos;,&apos;w+&apos;,encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">                f.writelines(comments)</span><br><span class="line">                del comments</span><br><span class="line">        except Exception as err:</span><br><span class="line">            print(err)</span><br><span class="line">        finally:</span><br><span class="line">            conn.close()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">def analysisWorld():</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    分析高频的单词，制作词云</span><br><span class="line">    &apos;&apos;&apos;</span><br><span class="line">    path=&apos;C:\\Users\\chend\\PycharmProjects\\nju\\&apos;</span><br><span class="line">    os.chdir(path)</span><br><span class="line">    with open(&apos;comments.txt&apos;, &apos;r+&apos;, encoding=&apos;utf-8&apos;) as f:</span><br><span class="line">        text=f.readlines()</span><br><span class="line">        segslist=[]</span><br><span class="line">        for sentense in text:</span><br><span class="line">            seq_list = jieba.cut(sentense, cut_all=True)</span><br><span class="line">            spliitsentense=&apos; &apos;.join(seq_list)</span><br><span class="line">            segslist.append(spliitsentense)</span><br><span class="line">    return segslist</span><br></pre></td></tr></table></figure><pre><code>def cloudWord(llstr):    &apos;&apos;&apos;    #词云图形展示    :return:    &apos;&apos;&apos;    path=&apos;C:\\Windows\\Fonts\\simkai.ttf&apos;    wordcloud = WordCloud(background_color=&quot;white&quot;,font_path=path,width=1000, height=860, margin=2).generate(llstr)    plt.imshow(wordcloud)    plt.axis(&quot;off&quot;)    plt.show()</code></pre><pre><code>#main函数主要做测试用def main():    # webCrawler()    # localAnalysis()    # storeDB(UsersPages)    # user=User(&apos;10287387&apos;)    # result=Opdatabase(&apos;select&apos;,user)    # print(result.getuserid(),result.getusername(), result.getuserhref(), result.getusercomment())    # print(&apos;----------------------------------------------------------------------&apos;)    # user1= User(&apos;220184863&apos;, &apos;Adminchendong&apos;, &apos;http://ahpuchend.github.io.com&apos;, &apos;hello world&apos;)    # Opdatabase(&apos;insert&apos;, user1)    # print(&apos;after insert&apos;)    # print(user1.getusercomment())    # result1 = Opdatabase(&apos;select&apos;, user1)    # print(result1.getuserid(), result1.getusername(), result1.getuserhref(), result1.getusercomment())    # r=Opdatabase(&apos;delete&apos;, User(&apos;220194863&apos;))    # print(r)    # user1 = User(&apos;1012070166&apos;)    # result1 = Opdatabase(&apos;select&apos;, user1)    # print(result1.getuserid(), result1.getusername(), result1.getuserhref(), result1.getusercomment())    # user2 = User(&apos;1012070166&apos;)    # op=Opdatabase(&apos;update&apos;,user2)    # print(op)    # analysisWorld()    getAllComments()    allcontent=analysisWorld()    txt=str(allcontent).strip()    cloudWord(txt)main()、、、</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要的想法就是先用request.get()方法获取一些url，得到url的html后再用beautifulsoup解析这些网页，获取用户的id,name,href,commnet这四个属性,然后在用户的这些属性存入数据库，又添加了一些无聊的数据库的增删改查功能,接着从数据库取出所有的评论，一边取一边用正则清洗一些无用的评论，然后直接用列表存一下清洗后的评论（反正数据比较少），然后用jieba库来中文分词，最后用wordcloude库生成词云。ui可以自定义，我做得超丑（主要觉得没意思[摊手]）&lt;/p&gt;
    
    </summary>
    
    
      <category term="python爬虫" scheme="https://ahpuchend.github.io/categories/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="编程语言" scheme="https://ahpuchend.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>hexo 图片</title>
    <link href="https://ahpuchend.github.io/2019/09/18/hexo-%E5%9B%BE%E7%89%87/"/>
    <id>https://ahpuchend.github.io/2019/09/18/hexo-图片/</id>
    <published>2019-09-18T07:38:43.000Z</published>
    <updated>2019-09-18T08:44:59.072Z</updated>
    
    <content type="html"><![CDATA[<p>下面是一张图片</p><p><img src="/2019/09/18/hexo-图片/user.jpg" alt="狗头"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下面是一张图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/09/18/hexo-图片/user.jpg&quot; alt=&quot;狗头&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://ahpuchend.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>算法设计</title>
    <link href="https://ahpuchend.github.io/2019/09/18/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/"/>
    <id>https://ahpuchend.github.io/2019/09/18/算法设计/</id>
    <published>2019-09-17T16:13:18.000Z</published>
    <updated>2019-09-18T01:17:39.532Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//函数对象 ：若一个类重载了运算符“()”,</span><br><span class="line">//则该类的对象就成为函数对象</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;list&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class CMyAverage&#123;</span><br><span class="line">public:</span><br><span class="line">double operator() (int a1,int a2,int a3)&#123;</span><br><span class="line">return (double)(a1+a2+a3)/3;</span><br><span class="line">&#125; </span><br><span class="line">&#125;;</span><br><span class="line">int main(void)&#123;</span><br><span class="line">CMyAverage average;</span><br><span class="line">cout&lt;&lt;average(3,2,3);//等价与averger.operator()(3,2,3) </span><br><span class="line">return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">//函数对象</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;functional&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;numeric&gt; </span><br><span class="line">using namespace std;</span><br><span class="line">int sumSquares(int total,int value)&#123;</span><br><span class="line">return total+value*value;</span><br><span class="line">&#125;</span><br><span class="line">template &lt;class T&gt;</span><br><span class="line">void PrintInterval(T first,T last)&#123;</span><br><span class="line">for(;first!=last;++first)&#123;</span><br><span class="line">cout&lt;&lt;*first&lt;&lt;&quot;,&quot;;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">template &lt;class T&gt;</span><br><span class="line">class SumPowers&#123;</span><br><span class="line">private:</span><br><span class="line">int power;</span><br><span class="line">public:</span><br><span class="line">SumPowers(int p):power(p)&#123;</span><br><span class="line">&#125;</span><br><span class="line">const T operator() (const T &amp; total,const T &amp; value)&#123;</span><br><span class="line">//计算value 的power 次方，加到total上</span><br><span class="line">T v=value;</span><br><span class="line">for(int i=0;i&lt;power-1;++i)</span><br><span class="line">v=v*value; </span><br><span class="line">return total+v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">int main(void)&#123;</span><br><span class="line">const int SIZE=10;</span><br><span class="line">int a1[]=&#123;1,2,3,4,5,6,7,8,9,10&#125;;</span><br><span class="line">vector&lt;int&gt; v(a1,a1+SIZE);</span><br><span class="line">cout&lt;&lt;&quot;1)&quot;;PrintInterval(v.begin(),v.end());</span><br><span class="line">int result=accumulate(v.begin(),v.end(),0,sumSquares);</span><br><span class="line">cout&lt;&lt;&quot;2)平方和 &quot;&lt;&lt;result&lt;&lt;endl;</span><br><span class="line">result=accumulate(v.begin(),v.end(),0,SumPowers&lt;int&gt;(3));</span><br><span class="line">cout&lt;&lt;&quot;3)立方和&quot;&lt;&lt;result&lt;&lt;endl;</span><br><span class="line">result=accumulate(v.begin(),v.end(),0,SumPowers&lt;int&gt;(4));</span><br><span class="line">cout&lt;&lt;&quot;4)4次方和&quot;&lt;&lt;result; </span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//函数对象 ：若一个类重载了运算符“()”,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//则该类的对象就成为函数对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include&amp;lt;list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include&amp;lt;string&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class CMyAverage&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		double operator() (int a1,int a2,int a3)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return (double)(a1+a2+a3)/3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main(void)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CMyAverage average;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cout&amp;lt;&amp;lt;average(3,2,3);//等价与averger.operator()(3,2,3) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="algorithm" scheme="https://ahpuchend.github.io/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="https://ahpuchend.github.io/tags/algorithm/"/>
    
  </entry>
  
</feed>
